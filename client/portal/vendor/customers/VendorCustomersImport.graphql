fragment VendorImport on Import {
  id
  ... on ImportCustomer {
    metadata {
      id
      company
      address
      first
      accurate
      last
      companyEmail
      resolvedBuyer
      resolvedBuyerRelId
      resolvedUser
      resolvedUserId
      userEmail
      userPhone
      userMobile
      companyPhone
      vendorBuyerRelIds
      userIds
    }
  }
}

query VendorCustomersImport($vendorId: ID!) {
  profile {
    id
    name
    email
    importAgentToken
  }
  vendor(memberId: $vendorId) {
    id
    company
    quickbooksIntegrated
    imports {
      ...VendorImport
    }
  }
}

query VendorCustomersImportBuyer($buyerRelId: ID!) {
  buyer(buyerId: $buyerRelId) {
    id
    member {
      id
      company
      email
      phone
    }
  }
}

query VendorCustomersImportUser($userId: ID!) {
  user(userId: $userId) {
    id
    first
    last
    email
    phone
  }
}

mutation VendorCustomersImportQuickbooks($vendorId: ID!) {
  importQuickbooksCustomers(vendorId: $vendorId)
}

mutation VendorCustomersImportUpdate($importId: ID!, $data: ImportCustomerMetadataWrite!, $reevaluate: Boolean!) {
  updateImportCustomer(importId: $importId, data: $data, reevaluate: $reevaluate) {
    ...VendorImport
  }
}

mutation VendorClearCustomerImport($vendorId: ID!) {
  clearImports(memberId: $vendorId)
}

mutation VendorCustomersImportUpload($vendorId: ID!, $customers: [UploadCustomer!]!) {
  uploadCustomers(vendorId: $vendorId, customers: $customers)
}

mutation VendorCustomersImportApproveBuyer($importId: ID!) {
  approveImportCustomerBuyer(importId: $importId)
}

mutation VendorCustomersImportApproveUser($importId: ID!) {
  approveImportCustomerUser(importId: $importId)
}

mutation VendorCustomersImportIgnoreBuyer($importId: ID!) {
  ignoreImportCustomerBuyer(importId: $importId)
}

mutation VendorCustomersImportIgnoreUser($importId: ID!) {
  ignoreImportCustomerUser(importId: $importId)
}

mutation VendorCustomersImportMergeUser($importId: ID!, $userId: ID) {
  mergeImportCustomerUser(userId: $userId, importId: $importId)
}

mutation VendorCustomersImportMergeBuyer($importId: ID!, $buyerRelId: ID) {
  mergeImportCustomerMember(buyerRelId: $buyerRelId, importId: $importId)
}
